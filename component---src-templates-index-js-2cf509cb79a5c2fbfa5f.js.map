{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./src/templates/index.js"],"names":["Bio","data","site","siteMetadata","author","social","style","display","marginBottom","rhythm","fixed","avatar","childImageSharp","alt","marginRight","minWidth","borderRadius","imgStyle","href","twitter","BlogPostTemplate","pageContext","location","post","markdownRemark","siteTitle","title","previous","next","frontmatter","description","excerpt","className","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","marginTop","scale","date","dangerouslySetInnerHTML","__html","html","pageQuery"],"mappings":"2MAkEeA,EArDH,WACV,IAAMC,EAAI,OADM,EAqBWA,EAAKC,KAAKC,aAA7BC,EArBQ,EAqBRA,OAAQC,EArBA,EAqBAA,OAChB,OACE,yBACEC,MAAO,CACLC,QAAQ,OACRC,aAAcC,YAAO,OAGvB,kBAAC,IAAD,CACEC,MAAOT,EAAKU,OAAOC,gBAAgBF,MACnCG,IAAKT,EACLE,MAAO,CACLQ,YAAaL,YAAO,IACpBD,aAAc,EACdO,SAAU,GACVC,aAAa,QAEfC,SAAU,CACRD,aAAa,SAGjB,yCACa,gCAASZ,GADtB,mEAGE,uBAAGc,KAAI,uBAAyBb,EAAOc,SAAvC,uC,kECyBOC,UA3EU,SAAC,GAAqC,IAAnCnB,EAAkC,EAAlCA,KAAMoB,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACvCC,EAAOtB,EAAKuB,eACZC,EAAYxB,EAAKC,KAAKC,aAAauB,MACjCC,EAAmBN,EAAnBM,SAAUC,EAASP,EAATO,KAElB,OACE,kBAAC,IAAD,CAAQN,SAAUA,EAAUI,MAAOD,GACjC,kBAAC,IAAD,CACEC,MAAOH,EAAKM,YAAYH,MACxBI,YAAaP,EAAKM,YAAYC,aAAeP,EAAKQ,UAEpD,yBAAKC,UAAU,yBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,aACb,6BACE,wBACE1B,MAAO,CACLC,QAAQ,OACR0B,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGT,GACC,kBAAC,OAAD,CAAMU,GAAIV,EAASW,OAAOC,KAAMC,IAAI,QAApC,KACKb,EAASE,YAAYH,QAI9B,4BACGE,GACC,kBAAC,OAAD,CAAMS,GAAIT,EAAKU,OAAOC,KAAMC,IAAI,QAC7BZ,EAAKC,YAAYH,MADpB,SAOR,gCACE,wBACEpB,MAAO,CACLmC,UAAWhC,YAAO,GAClBD,aAAc,IAGfe,EAAKM,YAAYH,OAEpB,uBACEpB,MAAK,iBACAoC,aAAM,IADN,CAEHnC,QAAQ,QACRC,aAAcC,YAAO,MAGtBc,EAAKM,YAAYc,OAGtB,6BAASC,wBAAyB,CAAEC,OAAQtB,EAAKuB,QACjD,wBACExC,MAAO,CACLE,aAAcC,YAAO,MAGzB,gCACE,kBAAC,EAAD,YAlEd,IA6EasC,EAAS,c","file":"component---src-templates-index-js-2cf509cb79a5c2fbfa5f.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nimport { rhythm } from \"../utils/typography\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/dipal.jpg/\" }) {\n        childImageSharp {\n          fixed(width: 50, height: 50) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  const { author, social } = data.site.siteMetadata\n  return (\n    <div\n      style={{\n        display: `flex`,\n        marginBottom: rhythm(2.5),\n      }}\n    >\n      <Image\n        fixed={data.avatar.childImageSharp.fixed}\n        alt={author}\n        style={{\n          marginRight: rhythm(1 / 2),\n          marginBottom: 0,\n          minWidth: 50,\n          borderRadius: `100%`,\n        }}\n        imgStyle={{\n          borderRadius: `50%`,\n        }}\n      />\n      <p>\n        Written by <strong>{author}</strong> who lives and works in Pune,\n        Maharastra building useful things.\n        <a href={`https://twitter.com/${social.twitter}`}>\n          You should follow him on Twitter\n        </a>\n      </p>\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm, scale } from \"../utils/typography\"\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata.title\n  const { previous, next } = pageContext\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <div className=\"col-xl-8 py-5 px-md-5\">\n        <div className=\"row pt-md-4\">\n          <div className=\"col-md-12\">\n            <nav>\n              <ul\n                style={{\n                  display: `flex`,\n                  flexWrap: `wrap`,\n                  justifyContent: `space-between`,\n                  listStyle: `none`,\n                  padding: 0,\n                }}\n              >\n                <li>\n                  {previous && (\n                    <Link to={previous.fields.slug} rel=\"prev\">\n                      ← {previous.frontmatter.title}\n                    </Link>\n                  )}\n                </li>\n                <li>\n                  {next && (\n                    <Link to={next.fields.slug} rel=\"next\">\n                      {next.frontmatter.title} →\n                    </Link>\n                  )}\n                </li>\n              </ul>\n            </nav>\n            <header>\n              <h1\n                style={{\n                  marginTop: rhythm(1),\n                  marginBottom: 0,\n                }}\n              >\n                {post.frontmatter.title}\n              </h1>\n              <p\n                style={{\n                  ...scale(-1 / 5),\n                  display: `block`,\n                  marginBottom: rhythm(1),\n                }}\n              >\n                {post.frontmatter.date}\n              </p>\n            </header>\n            <section dangerouslySetInnerHTML={{ __html: post.html }} />\n            <hr\n              style={{\n                marginBottom: rhythm(1),\n              }}\n            />\n            <footer>\n              <Bio />\n            </footer>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`\n"],"sourceRoot":""}