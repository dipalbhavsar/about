{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./src/templates/index.js"],"names":["Bio","data","site","siteMetadata","author","social","style","display","marginBottom","rhythm","fixed","avatar","childImageSharp","alt","marginRight","minWidth","borderRadius","imgStyle","href","twitter","BlogPostTemplate","pageContext","location","post","markdownRemark","siteTitle","title","previous","next","frontmatter","description","excerpt","className","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","marginTop","scale","date","dangerouslySetInnerHTML","__html","html","pageQuery"],"mappings":"2MAiEeA,EApDH,WACV,IAAMC,EAAI,OADM,EAqBWA,EAAKC,KAAKC,aAA7BC,EArBQ,EAqBRA,OAAQC,EArBA,EAqBAA,OAChB,OACE,yBACEC,MAAO,CACLC,QAAQ,OACRC,aAAcC,YAAO,OAGrB,kBAAC,IAAD,CACAC,MAAOT,EAAKU,OAAOC,gBAAgBF,MACnCG,IAAKT,EACLE,MAAO,CACLQ,YAAaL,YAAO,IACpBD,aAAc,EACdO,SAAU,GACVC,aAAa,QAEfC,SAAU,CACRD,aAAa,SAGjB,yCACa,gCAASZ,GADtB,mEAEE,uBAAGc,KAAI,uBAAyBb,EAAOc,SAAvC,uC,kEC0BOC,UA3EU,SAAC,GAAqC,IAAnCnB,EAAkC,EAAlCA,KAAMoB,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACvCC,EAAOtB,EAAKuB,eACZC,EAAYxB,EAAKC,KAAKC,aAAauB,MACjCC,EAAmBN,EAAnBM,SAAUC,EAASP,EAATO,KAElB,OACE,kBAAC,IAAD,CAAQN,SAAUA,EAAUI,MAAOD,GACjC,kBAAC,IAAD,CACEC,MAAOH,EAAKM,YAAYH,MACxBI,YAAaP,EAAKM,YAAYC,aAAeP,EAAKQ,UAEpD,yBAAKC,UAAU,yBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,aACb,6BACE,wBACE1B,MAAO,CACLC,QAAQ,OACR0B,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGT,GACC,kBAAC,OAAD,CAAMU,GAAIV,EAASW,OAAOC,KAAMC,IAAI,QAApC,KACKb,EAASE,YAAYH,QAI9B,4BACGE,GACC,kBAAC,OAAD,CAAMS,GAAIT,EAAKU,OAAOC,KAAMC,IAAI,QAC7BZ,EAAKC,YAAYH,MADpB,SAOR,gCACE,wBACEpB,MAAO,CACLmC,UAAWhC,YAAO,GAClBD,aAAc,IAGfe,EAAKM,YAAYH,OAEpB,uBACEpB,MAAK,iBACAoC,aAAM,IADN,CAEHnC,QAAQ,QACRC,aAAcC,YAAO,MAGtBc,EAAKM,YAAYc,OAGtB,6BAASC,wBAAyB,CAAEC,OAAQtB,EAAKuB,QACjD,wBACExC,MAAO,CACLE,aAAcC,YAAO,MAGzB,gCACE,kBAAC,EAAD,YAlEd,IA6EasC,EAAS,c","file":"component---src-templates-index-js-4a51ada7f988f1e4336e.js","sourcesContent":["/**\r\n * Bio component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Image from \"gatsby-image\"\r\n\r\nimport { rhythm } from \"../utils/typography\"\r\n\r\nconst Bio = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query BioQuery {\r\n      avatar: file(absolutePath: { regex: \"/dipal.jpg/\" }) {\r\n        childImageSharp {\r\n          fixed(width: 50, height: 50) {\r\n            ...GatsbyImageSharpFixed\r\n          }\r\n        }\r\n      }\r\n      site {\r\n        siteMetadata {\r\n          author\r\n          social {\r\n            twitter\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const { author, social } = data.site.siteMetadata\r\n  return (\r\n    <div\r\n      style={{\r\n        display: `flex`,\r\n        marginBottom: rhythm(2.5),\r\n      }}\r\n    >\r\n        <Image\r\n        fixed={data.avatar.childImageSharp.fixed}\r\n        alt={author}\r\n        style={{\r\n          marginRight: rhythm(1 / 2),\r\n          marginBottom: 0,\r\n          minWidth: 50,\r\n          borderRadius: `100%`,\r\n        }}\r\n        imgStyle={{\r\n          borderRadius: `50%`,\r\n        }}\r\n      /> \r\n      <p>\r\n        Written by <strong>{author}</strong> who lives and works in Pune, Maharastra building useful things.\r\n        <a href={`https://twitter.com/${social.twitter}`}>\r\n          You should follow him on Twitter\r\n        </a>\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bio\r\n","import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport { rhythm, scale } from \"../utils/typography\"\r\n\r\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\r\n  const post = data.markdownRemark\r\n  const siteTitle = data.site.siteMetadata.title\r\n  const { previous, next } = pageContext\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <SEO\r\n        title={post.frontmatter.title}\r\n        description={post.frontmatter.description || post.excerpt}\r\n      />\r\n      <div className=\"col-xl-8 py-5 px-md-5\">\r\n        <div className=\"row pt-md-4\">\r\n          <div className=\"col-md-12\">\r\n            <nav>\r\n              <ul\r\n                style={{\r\n                  display: `flex`,\r\n                  flexWrap: `wrap`,\r\n                  justifyContent: `space-between`,\r\n                  listStyle: `none`,\r\n                  padding: 0,\r\n                }}\r\n              >\r\n                <li>\r\n                  {previous && (\r\n                    <Link to={previous.fields.slug} rel=\"prev\">\r\n                      ← {previous.frontmatter.title}\r\n                    </Link>\r\n                  )}\r\n                </li>\r\n                <li>\r\n                  {next && (\r\n                    <Link to={next.fields.slug} rel=\"next\">\r\n                      {next.frontmatter.title} →\r\n                            </Link>\r\n                  )}\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n            <header>\r\n              <h1\r\n                style={{\r\n                  marginTop: rhythm(1),\r\n                  marginBottom: 0,\r\n                }}\r\n              >\r\n                {post.frontmatter.title}\r\n              </h1>\r\n              <p\r\n                style={{\r\n                  ...scale(-1 / 5),\r\n                  display: `block`,\r\n                  marginBottom: rhythm(1),\r\n                }}\r\n              >\r\n                {post.frontmatter.date}\r\n              </p>\r\n            </header>\r\n            <section dangerouslySetInnerHTML={{ __html: post.html }} />\r\n            <hr\r\n              style={{\r\n                marginBottom: rhythm(1),\r\n              }}\r\n            />\r\n            <footer>\r\n              <Bio />\r\n            </footer>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug($slug: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        description\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}