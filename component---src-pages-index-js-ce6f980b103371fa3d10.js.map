{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["IndexPage","location","posts","data","pageData","edges","title","description","keywords","map","node","blogData","key","id","pageQuery"],"mappings":"4FAAA,+GAiBeA,UAZG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,SACXC,EADgC,EAAXC,KACRC,SAASC,MAC9B,OACE,YAAC,IAAD,CAAQJ,SAAUA,GAChB,YAAC,IAAD,CAAKK,MAAM,OAAOC,YAAc,8BAA8BC,SAAU,CAAC,SAAD,wFACvEN,EAAMO,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACZ,OAAO,YAAC,IAAD,CAAcC,SAAUD,EAAME,IAAK,IAAMF,EAAKG,UAQtD,IAAMC,EAAS","file":"component---src-pages-index-js-ce6f980b103371fa3d10.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport BlogEntryNew from \"../components/blogentrynew\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst IndexPage = ({ location, data }) => {\r\n    const posts = data.pageData.edges\r\n  return (\r\n    <Layout location={location}>\r\n      <SEO title=\"Home\" description = \"List of all available post.\" keywords={[`coding`, `programming`, `Dipal Bhavsar`, `gatsbyJS`,`web development`,`React`,`web programming`]}/>\r\n      {posts.map(({ node }) => {\r\n        return <BlogEntryNew blogData={node} key={\"_\" + node.id}></BlogEntryNew>\r\n      })}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default IndexPage\r\n\r\nexport const pageQuery = graphql`\r\nquery {\r\n  pageData: allMarkdownRemark(\r\n    sort: {order: DESC, fields: [frontmatter___date]}\r\n    ) {      \r\n    totalCount\r\n    edges {\r\n      node {\r\n        id\r\n        tableOfContents\r\n        timeToRead\r\n        fields {\r\n          slug\r\n        }\r\n        wordCount {\r\n          paragraphs\r\n          sentences\r\n          words\r\n        }\r\n        frontmatter {                  \r\n          title\r\n          description\r\n          pageImage\r\n          date(formatString: \"YYYYMMDD\")\r\n          pageAuthor\r\n          pageCategory\r\n          pageMenu\r\n          pageTags\r\n        }                \r\n      }\r\n    }\r\n  }\r\n  categories:allMarkdownRemark(\r\n    filter: { frontmatter: { pageTags: { in: [\"Agile\",\"Azure\",\"React\",\"SharePoint\", \"IdentityServer\", \"CodeReview\"] } } }\r\n  ) {\r\n  group(field: frontmatter___pageTags) {\r\n        name: fieldValue\r\n        totalCount\r\n    }      \r\n  }\r\n}\r\n`\r\n"],"sourceRoot":""}